if [ ! -f "$GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/webConfig.json" ]; then
    say "Copying web config and npm install for first time development process"
    mkdir -p $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/plugins
    cd $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/bin
    chmod +x *
fi
pth=$GOPATH
if [[ "$pth" == "" ]]; then
    echo "You have no GOPATH environment variable.  Please install go and set it before running this app"
    say "You have no GOPATH environment variable.  Please install go and set it before running this app.  Exiting now"
    exit 1
fi

npm version > /dev/null  2>&1
ret=$?
if [[ "$ret" -eq 0 ]]; then
    echo "npm install ok"
else
    echo "You need to install npm"
    say "You need to install npm.  Exiting now"
    exit 1
fi

envNode=$NODE_ENV
if [[ "$envNode" == "" ]]; then
    echo "Set NODE_ENV environment to development"
    say "Set NODE_ENV environment to development.  Exiting now"
    exit 1
fi

cd $GOPATH
go run src/github.com/davidrenne/goCoreCreateAppGeneration/buildGoCoreCreateAppGeneration/buildGoCoreCreateAppGeneration.go

whoami=$(whoami)
port=$(bash $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/bin/get_port_local)
if [[ "$whoami" == "root" ]] || [[ "$port" != "80" ]]; then
    rm -rf /tmp/go-build* > /dev/null 2>&1
else
    sudo rm -rf /tmp/go-build* > /dev/null 2>&1
fi
bash $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/bin/kill_go_watch

set -e
if [ ! -d "$GOPATH/src/github.com/DanielRenne/GoCore" ]; then
    say "installing go core"
    go get github.com/DanielRenne/GoCore/... > /tmp/goCore1  2>&1
    go install github.com/DanielRenne/GoCore/getCore > /tmp/goCore2  2>&1
    sleep 2
    getCore > /tmp/goCore3  2>&1
    go install github.com/DanielRenne/GoCore/core/goCoreCreateApp > /tmp/goCore4  2>&1
fi

if [ ! -d "$GOPATH/src/github.com/DanielRenne/GoCore/tools/appFiles/web" ]; then
   getCore
fi


if [ ! -d "$GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/web/app/node_modules" ]; then
    say "npm install starting"
    cd $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/web/app
    #https://github.com/sass/node-sass/issues/1847
    #node-sass needs unsafe-perm
    npm install --unsafe-perm
    say "npm install ended"
fi

if [ ! -f "$GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/web/app/dist/javascript/go-core-app.js.gz" ]; then
    say "copy dist tar balls starting"
    cd $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/web/app/javascript
    bash build.sh
    say "copy dist tar balls ending"
fi

set +e

echo "" > $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/app.log
echo "" > $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/db.log
echo "" > /tmp/go_watch.log
echo "" > $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/npm.log

if [[ "$whoami" == "root" ]] || [[ "$port" != "80" ]]; then
    rm $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/mongo.log
else
    sudo rm $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/log/mongo.log
fi
bash $GOPATH/src/github.com/davidrenne/goCoreCreateAppGeneration/bin/dev
